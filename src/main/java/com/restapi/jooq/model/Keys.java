/*
 * This file is generated by jOOQ.
 */
package com.restapi.jooq.model;


import com.restapi.jooq.model.tables.BpCompartmentAllocation;
import com.restapi.jooq.model.tables.BpJourney;
import com.restapi.jooq.model.tables.BpJourneyLine;
import com.restapi.jooq.model.tables.BpOrder;
import com.restapi.jooq.model.tables.BpOrderLine;
import com.restapi.jooq.model.tables.Databasechangeloglock;
import com.restapi.jooq.model.tables.records.BpCompartmentAllocationRecord;
import com.restapi.jooq.model.tables.records.BpJourneyLineRecord;
import com.restapi.jooq.model.tables.records.BpJourneyRecord;
import com.restapi.jooq.model.tables.records.BpOrderLineRecord;
import com.restapi.jooq.model.tables.records.BpOrderRecord;
import com.restapi.jooq.model.tables.records.DatabasechangeloglockRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BpCompartmentAllocationRecord> PK_BP_COMPARTMENT_ALLOCATION = Internal.createUniqueKey(BpCompartmentAllocation.BP_COMPARTMENT_ALLOCATION, DSL.name("pk_bp_compartment_allocation"), new TableField[] { BpCompartmentAllocation.BP_COMPARTMENT_ALLOCATION.ID }, true);
    public static final UniqueKey<BpJourneyRecord> PK_BP_JOURNEY = Internal.createUniqueKey(BpJourney.BP_JOURNEY, DSL.name("pk_bp_journey"), new TableField[] { BpJourney.BP_JOURNEY.ID }, true);
    public static final UniqueKey<BpJourneyLineRecord> PK_BP_JOURNEY_LINE = Internal.createUniqueKey(BpJourneyLine.BP_JOURNEY_LINE, DSL.name("pk_bp_journey_line"), new TableField[] { BpJourneyLine.BP_JOURNEY_LINE.ID }, true);
    public static final UniqueKey<BpOrderRecord> PK_BP_ORDER = Internal.createUniqueKey(BpOrder.BP_ORDER, DSL.name("pk_bp_order"), new TableField[] { BpOrder.BP_ORDER.ID }, true);
    public static final UniqueKey<BpOrderLineRecord> PK_BP_ORDER_LINE = Internal.createUniqueKey(BpOrderLine.BP_ORDER_LINE, DSL.name("pk_bp_order_line"), new TableField[] { BpOrderLine.BP_ORDER_LINE.ID }, true);
    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
}
