/*
 * This file is generated by jOOQ.
 */
package com.restapi.jooq.model.tables.records;


import com.restapi.jooq.model.tables.BpJourneyLine;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BpJourneyLineRecord extends UpdatableRecordImpl<BpJourneyLineRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.bp_journey_line.id</code>.
     */
    public BpJourneyLineRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.bp_journey_line.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.bp_journey_line.journey_id</code>.
     */
    public BpJourneyLineRecord setJourneyId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.bp_journey_line.journey_id</code>.
     */
    public Long getJourneyId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.bp_journey_line.compartment_id</code>.
     */
    public BpJourneyLineRecord setCompartmentId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.bp_journey_line.compartment_id</code>.
     */
    public Long getCompartmentId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BpJourneyLine.BP_JOURNEY_LINE.ID;
    }

    @Override
    public Field<Long> field2() {
        return BpJourneyLine.BP_JOURNEY_LINE.JOURNEY_ID;
    }

    @Override
    public Field<Long> field3() {
        return BpJourneyLine.BP_JOURNEY_LINE.COMPARTMENT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getJourneyId();
    }

    @Override
    public Long component3() {
        return getCompartmentId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getJourneyId();
    }

    @Override
    public Long value3() {
        return getCompartmentId();
    }

    @Override
    public BpJourneyLineRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BpJourneyLineRecord value2(Long value) {
        setJourneyId(value);
        return this;
    }

    @Override
    public BpJourneyLineRecord value3(Long value) {
        setCompartmentId(value);
        return this;
    }

    @Override
    public BpJourneyLineRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BpJourneyLineRecord
     */
    public BpJourneyLineRecord() {
        super(BpJourneyLine.BP_JOURNEY_LINE);
    }

    /**
     * Create a detached, initialised BpJourneyLineRecord
     */
    public BpJourneyLineRecord(Long id, Long journeyId, Long compartmentId) {
        super(BpJourneyLine.BP_JOURNEY_LINE);

        setId(id);
        setJourneyId(journeyId);
        setCompartmentId(compartmentId);
    }
}
