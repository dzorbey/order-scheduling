/*
 * This file is generated by jOOQ.
 */
package com.restapi.jooq.model.tables;


import com.restapi.jooq.model.Keys;
import com.restapi.jooq.model.Public;
import com.restapi.jooq.model.tables.records.BpOrderLineRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BpOrderLine extends TableImpl<BpOrderLineRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.bp_order_line</code>
     */
    public static final BpOrderLine BP_ORDER_LINE = new BpOrderLine();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BpOrderLineRecord> getRecordType() {
        return BpOrderLineRecord.class;
    }

    /**
     * The column <code>public.bp_order_line.id</code>.
     */
    public final TableField<BpOrderLineRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.bp_order_line.order_id</code>.
     */
    public final TableField<BpOrderLineRecord, Long> ORDER_ID = createField(DSL.name("order_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.bp_order_line.weight</code>.
     */
    public final TableField<BpOrderLineRecord, BigDecimal> WEIGHT = createField(DSL.name("weight"), SQLDataType.NUMERIC(22, 10), this, "");

    /**
     * The column <code>public.bp_order_line.source</code>.
     */
    public final TableField<BpOrderLineRecord, String> SOURCE = createField(DSL.name("source"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.bp_order_line.destination</code>.
     */
    public final TableField<BpOrderLineRecord, String> DESTINATION = createField(DSL.name("destination"), SQLDataType.VARCHAR, this, "");

    private BpOrderLine(Name alias, Table<BpOrderLineRecord> aliased) {
        this(alias, aliased, null);
    }

    private BpOrderLine(Name alias, Table<BpOrderLineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.bp_order_line</code> table reference
     */
    public BpOrderLine(String alias) {
        this(DSL.name(alias), BP_ORDER_LINE);
    }

    /**
     * Create an aliased <code>public.bp_order_line</code> table reference
     */
    public BpOrderLine(Name alias) {
        this(alias, BP_ORDER_LINE);
    }

    /**
     * Create a <code>public.bp_order_line</code> table reference
     */
    public BpOrderLine() {
        this(DSL.name("bp_order_line"), null);
    }

    public <O extends Record> BpOrderLine(Table<O> child, ForeignKey<O, BpOrderLineRecord> key) {
        super(child, key, BP_ORDER_LINE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<BpOrderLineRecord, Long> getIdentity() {
        return (Identity<BpOrderLineRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<BpOrderLineRecord> getPrimaryKey() {
        return Keys.PK_BP_ORDER_LINE;
    }

    @Override
    public List<UniqueKey<BpOrderLineRecord>> getKeys() {
        return Arrays.<UniqueKey<BpOrderLineRecord>>asList(Keys.PK_BP_ORDER_LINE);
    }

    @Override
    public BpOrderLine as(String alias) {
        return new BpOrderLine(DSL.name(alias), this);
    }

    @Override
    public BpOrderLine as(Name alias) {
        return new BpOrderLine(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BpOrderLine rename(String name) {
        return new BpOrderLine(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BpOrderLine rename(Name name) {
        return new BpOrderLine(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, BigDecimal, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
